# Generated by Django 3.2.4 on 2021-09-12 21:48

import Online_App.models
import ckeditor.fields
from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='City',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('city_name', models.CharField(max_length=50)),
                ('city_code', models.IntegerField()),
            ],
            options={
                'verbose_name': 'City',
                'verbose_name_plural': 'Citys',
                'db_table': 'city_details',
            },
        ),
        migrations.CreateModel(
            name='Country',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('country_name', models.CharField(max_length=50)),
                ('country_code', models.IntegerField()),
            ],
            options={
                'verbose_name': 'Country',
                'verbose_name_plural': 'Countries',
                'db_table': 'country_details',
            },
        ),
        migrations.CreateModel(
            name='District',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('district_name', models.CharField(max_length=30)),
                ('district_code', models.IntegerField()),
            ],
            options={
                'verbose_name': 'District',
                'verbose_name_plural': 'Districts',
                'db_table': 'district_details',
            },
        ),
        migrations.CreateModel(
            name='Employee',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('employee_firstname', models.CharField(max_length=50)),
                ('employee_middlename', models.CharField(blank=True, max_length=50, null=True)),
                ('employee_lastname', models.CharField(blank=True, max_length=50, null=True)),
                ('employee_address', models.CharField(max_length=100)),
                ('employee_experience', models.IntegerField()),
                ('employee_designation', models.CharField(max_length=50)),
                ('employee_id', models.IntegerField(unique=True)),
                ('employee_monthsalary', models.IntegerField()),
                ('employee_per_annum_salary', models.IntegerField()),
                ('employee_pf', models.IntegerField()),
                ('employee_telephone', models.IntegerField()),
                ('employee_mobile', models.IntegerField()),
                ('employee_email', models.EmailField(max_length=25)),
                ('employee_dob', models.DateField(blank=True, null=True)),
                ('employee_tax', models.IntegerField(blank=True, null=True)),
                ('employee_city', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='Employee_City', to='Online_App.city')),
                ('employee_country', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='Employee_Country', to='Online_App.country')),
                ('employee_district', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='Employee_District', to='Online_App.district')),
            ],
            options={
                'verbose_name': 'Employee',
                'verbose_name_plural': 'Employees',
                'db_table': 'employee_details',
            },
        ),
        migrations.CreateModel(
            name='Index_Page',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('index_image', models.FileField(upload_to='index_images')),
            ],
            options={
                'verbose_name': 'index',
                'verbose_name_plural': 'index',
                'db_table': 'index_page',
            },
        ),
        migrations.CreateModel(
            name='Orders',
            fields=[
                ('order_id', models.AutoField(primary_key=True, serialize=False)),
                ('items_json', models.CharField(max_length=5000)),
                ('amount', models.CharField(default=0, max_length=1000000)),
                ('name', models.CharField(max_length=90)),
                ('email', models.CharField(max_length=111)),
                ('address', models.CharField(max_length=111)),
                ('city', models.CharField(max_length=111)),
                ('state', models.CharField(max_length=111)),
                ('zip_code', models.CharField(max_length=6, validators=[django.core.validators.MinLengthValidator(6)])),
                ('phone', models.CharField(max_length=10, validators=[django.core.validators.MinLengthValidator(10)])),
            ],
            options={
                'verbose_name': 'order',
                'verbose_name_plural': 'orders',
                'db_table': 'placed_order',
            },
        ),
        migrations.CreateModel(
            name='OrderUpdate',
            fields=[
                ('update_id', models.AutoField(primary_key=True, serialize=False)),
                ('order_id', models.IntegerField(default='')),
                ('update_desc', models.CharField(max_length=5000)),
                ('timestamp', models.DateField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='Product_Details',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=80)),
                ('product_category', models.CharField(max_length=50)),
                ('image', models.ImageField(upload_to='Product_Images')),
                ('product_description', ckeditor.fields.RichTextField(blank=True)),
                ('product_original_price', models.IntegerField()),
                ('price', models.IntegerField()),
                ('product_upload_date', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'verbose_name': 'product',
                'verbose_name_plural': 'products',
                'db_table': 'product_details',
            },
        ),
        migrations.CreateModel(
            name='Profile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(max_length=80)),
                ('last_name', models.CharField(max_length=80)),
                ('address', models.CharField(max_length=250)),
                ('phone', models.CharField(max_length=10, validators=[django.core.validators.MinLengthValidator(10)])),
                ('file', models.FileField(default='images.png', upload_to='Update_Profile')),
            ],
        ),
        migrations.CreateModel(
            name='State',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('state_name', models.CharField(max_length=50)),
                ('state_code', models.IntegerField()),
            ],
            options={
                'verbose_name': 'State',
                'verbose_name_plural': 'States',
                'db_table': 'state_details',
            },
        ),
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('username', models.CharField(blank=True, max_length=50)),
                ('email', models.EmailField(max_length=254, unique=True, verbose_name='email address')),
                ('first_name', models.CharField(max_length=80)),
                ('last_name', models.CharField(max_length=80)),
                ('address', models.CharField(max_length=250)),
                ('phone', models.CharField(blank=True, max_length=10, null=True, unique=True, validators=[django.core.validators.MinLengthValidator(10)])),
                ('file', models.FileField(default='images.png', upload_to='User_Images')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', Online_App.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='User_Model_Email_Verification',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('token', models.CharField(max_length=150)),
                ('verify', models.BooleanField(default=False)),
                ('user', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Manager',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('manager_firstname', models.CharField(max_length=50)),
                ('manager_middlename', models.CharField(blank=True, max_length=50, null=True)),
                ('manager_lastname', models.CharField(blank=True, max_length=50, null=True)),
                ('manager_address', models.CharField(max_length=100)),
                ('manager_experience', models.IntegerField()),
                ('manager_designation', models.CharField(max_length=50)),
                ('manager_monthlysalary', models.IntegerField()),
                ('manager_id', models.IntegerField(unique=True)),
                ('manager_per_annum_salary', models.IntegerField(blank=True, null=True)),
                ('manager_pf', models.IntegerField()),
                ('manager_telephone', models.IntegerField()),
                ('manager_mobile', models.IntegerField()),
                ('manager_email', models.EmailField(max_length=25)),
                ('manager_tax', models.IntegerField(blank=True, null=True)),
                ('manager_dob', models.DateField(blank=True, null=True)),
                ('Employee', models.ManyToManyField(to='Online_App.Employee')),
                ('manager_city', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='Manager_City', to='Online_App.city')),
                ('manager_country', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='Manager_Country', to='Online_App.country')),
                ('manager_district', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='Manager_District', to='Online_App.district')),
                ('manager_state', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='Manager_State', to='Online_App.state')),
            ],
            options={
                'verbose_name': 'Manager',
                'verbose_name_plural': 'Managers',
                'db_table': 'managers_details',
            },
        ),
        migrations.AddField(
            model_name='employee',
            name='employee_state',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='Employee_State', to='Online_App.state'),
        ),
    ]
